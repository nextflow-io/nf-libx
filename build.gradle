/*
 * Copyright 2020-2021, Seqera Labs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "io.codearte.nexus-staging" version "0.21.2"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

group = 'io.nextflow'
version = '0.1.0'

dependencies {
    // Use the latest Groovy version for Spock testing
    testImplementation 'org.codehaus.groovy:groovy:3.0.9'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    testImplementation 'junit:junit:4.13.2'

}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// -- maven publishing

ext.nexusUsername = hasProperty('nexusUsername') ? properties.get('nexusUsername') : null
ext.nexusPassword = hasProperty('nexusPassword') ? properties.get('nexusPassword') : null
ext.nexusFullName = hasProperty('nexusFullName') ? properties.get('nexusFullName') : null
ext.nexusEmail = hasProperty('nexusEmail') ? properties.get('nexusEmail') : null

publishing {
    publications {
        mavenJava(MavenPublication) {
            suppressPomMetadataWarningsFor('testFixturesApiElements')
            suppressPomMetadataWarningsFor('testFixturesRuntimeElements')
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Nextflow'
                description = 'A JSR-203 complaint file system provider for Amazon S3 storage'
                url = 'http://www.nextflow.io'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = nexusUsername
                        name = nexusFullName
                        email = nexusEmail
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/nextflow-io/nextflow-s3fs.git'
                    developerConnection = 'scm:git:git@github.com:nextflow-io/nextflow-s3fs.git'
                    url = 'https://github.com/nextflow-io/nextflow-s3fs'
                }
            }

        }
    }

    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials(PasswordCredentials) {
                username nexusUsername
                password nexusPassword
            }
        }
    }
}

signing {
    //required { enableSignArchives }
    sign publishing.publications.mavenJava
}


// Disable strict javadoc checks
// See http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}


/*
 * Configure Nextflow staging plugin
 * https://github.com/Codearte/gradle-nexus-staging-plugin
 */
nexusStaging {
    packageGroup = 'io.nextflow'
    delayBetweenRetriesInMillis = 10_000
}

task release(dependsOn: [closeRepository, promoteRepository]) { }
